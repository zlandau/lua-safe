
Using Lua Safe
--------------

Lua Safe support adds the following functions: setsafelevel(num),
getsafelevel(), taint(var), untaint(), and istainted(var).  To set the taint
level, either call setsafelevel() with the desired safety level, or use the -T
command line parameter.  Once this is done, safety levels will be in effect.

To run the Lua Safe version of the interpreter, run 'bin/lua'.  Without
parameters, it will give you a Lua prompt.  If you include a filename, it will
run that file as a script.  To run the unit tests, which also show off the
different functionality, go into the safe/ directory and type 'make'.  This
will run all of the unit tests.  For example usage, see the files in
safe/examples. 
